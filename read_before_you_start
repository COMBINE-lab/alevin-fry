1. run `cargo build --release` to install alevin-fry.

2. This code uses an expanded transcriptome as the reference, in which each gene has its spliced transcripts(isoforms) and one unspliced transcript, which is the whole region of the gene (including all introns).

3. the expanded transcriptome can be generated using spliced_unspliced_txome_builder.R, following is the instructions to run the code. You can also get it by running`Rscript spliced_unspliced_txome_builder.R --help`

        This Rscript is used for building expanded transcriptome containing the spliced and unspliced version of genes.
        -----------------------------------------------------------
        Inputs:
        1. --gtf: a gtf/gtf(.gz) file
        2. --fa: a genome.fa(.gz) file
        3. (optional) --outdir: an output directory

        output:
        An expanded transcriptome contains:
        1. annotation.expanded.tx2gene.tsv: Transcript names with corresponding gene names
        2. annotatoion.expanded.gtf: Each gene has an unspliced version, which is the genome range from the 5' end of the first exon to the 3' end of the last exon
        3. annotation.expanded.fa: The corresponding sequences of the terms in annotatoion.expanded.gtf
        Note: 
        1. The expanded transcriptome is named using the name of the input gtf file
        2. The correct input arg example: --fa=genome.fa
        3. If the outdir is not specified, a new directory will be created in the working directory 
        4. If some strange errors show up, please check the version of the packages, this script requires the same environment as `eisaR` R package.
        5. This script is based on `eisaR` and `tximeta` R packages.

4. The end-to-end example pipeline used to do quantification and dump gene equivalence classes is in `run_alevinfry.sh`. 

5. There are three files that are related to dump_eqclasses
    1. geqc_counts.mtx contains the geqc by cell counts.
    2. gene_eqclass.txt.gz contains the sets of genes that define each eqc, each row is for an eqc, and the last item of each row is the eqclass id(row # in geqc_counts.mtx)
    3. gene_type_eqclass.txt.gz has the same format as `gene_eqclass.txt.gz`. It contains the gene type of each gene in the `gene_eqclass.txt.gz`
