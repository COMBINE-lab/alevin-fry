name: Rust

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

env:
  CARGO_TERM_COLOR: always

jobs:
  Formatting:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.4.2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt
      
      - name: Check format
        run: cargo fmt -- --check

  build:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2.4.2
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose

  Linting:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.4.2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy
      
      - name: Lint with clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  sample_run:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    # - uses: actions/checkout@v2.4.2
    # - name: Install
    #   run: cargo build --release
    - name: sample run
      run: |
        wget https://umd.box.com/shared/static/75a80udhx51fjndbgnm6dmm25qsia5ks.gz -O toy_set.tar.gz
        tar xzf toy_set.tar.gz
        fry="target/debug/alevin-fry"
        threads=2
        map_dir="toy_set/alevin_map"
        gpl_dir="gpl"
        quant_dir="quant"
        permitmode="-u toy_set/10x_v3_permit.txt"
        t2g="toy_set/t2g_3col.tsv"
        res="cr-like"
        ### generate permit list
        cmd="$fry generate-permit-list $permitmode -d fw -i $map_dir -o $gpl_dir"
        eval $cmd

        ### collate
        cmd="$fry collate -i $gpl_dir -r $map_dir -t $threads"
        eval $cmd

        ### quant
        cmd="$fry quant -r $res --use-mtx -m $t2g -i $gpl_dir -o $quant_dir -t $threads"
        eval $cmd

  # Coverage:
  #   if: "!contains(github.event.head_commit.message, 'skip ci')"
  #   needs: Formatting
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     - name: Install nightly toolchain
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: nightly
  #         override: true

  #     - name: Install cargo-tarpaulin
  #       uses: actions-rs/install@v0.1
  #       with:
  #         crate: cargo-tarpaulin
  #         version: latest
  #         use-tool-cache: true

  #     - name: Coverage with tarpaulin
  #       run: cargo tarpaulin --all --all-features --timeout 600 --out Lcov -- --test-threads 1

  #     - name: Upload coverage
  #       uses: coverallsapp/github-action@master
  #       with:
  #         github-token: ${{ secrets.GITHUB_TOKEN }}
  #         path-to-lcov: ./lcov.info
